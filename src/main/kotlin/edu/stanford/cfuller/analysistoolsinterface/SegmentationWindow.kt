package edu.stanford.cfuller.analysistoolsinterface

import java.util.logging.Formatter
import java.util.logging.Handler
import java.util.logging.LogRecord
import javax.swing.DefaultComboBoxModel
import javax.swing.GroupLayout
import javax.swing.JTextArea
import javax.swing.LayoutStyle
import javax.swing.SwingUtilities

/**

 * @author cfuller
 */
class SegmentationWindow
/** Creates new form SegmentationWindow  */
(internal var controller: SegmentationController) : javax.swing.JFrame() {
    var methodComboBoxModel: DefaultComboBoxModel<String>
        internal set
    private var handler: TextAreaLogHandler

    val logHandler: Handler
        get() = this.handler

    var parameterFilename: String
        get() = this.parameterFileTextField!!.text
        set(filename) {
            this.parameterFileTextField!!.text = filename
        }

    var imageFilename: String
        get() = this.imageTextField!!.text
        set(filename) {
            this.imageTextField!!.text = filename
        }

    var selectedMethodIndex: Int
        get() = this.methodComboBox!!.selectedIndex
        set(i) {
            this.methodComboBox!!.selectedIndex = i
        }

    fun setCustomMethodFieldEnabled(enabled: Boolean) {
        this.customMethodTextField!!.isEnabled = enabled
    }

    val customClassName: String
        get() = this.customMethodTextField!!.text

    var status: String
        get() = this.statusLabel!!.text
        set(status) {
            this.statusLabel!!.text = status
        }

    fun summarizeDataOnly(): Boolean {
        return this.summarizeDataOnlyCheckBox!!.isSelected
    }

    var useOmeroServer: Boolean
        get() = this.useOmeroServerCheckBox!!.isSelected
        set(use) {
            this.useOmeroServerCheckBox!!.isSelected = use
        }

    fun disableOmero() {
        this.useOmeroServer = false
        this.omeroButton!!.isEnabled = false
        this.useOmeroServerCheckBox!!.isEnabled = false
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    fun initComponents() {

        methodComboBox = javax.swing.JComboBox<String>()
        jLabel2 = javax.swing.JLabel()
        customMethodTextField = javax.swing.JTextField()
        jLabel3 = javax.swing.JLabel()
        parameterFileTextField = javax.swing.JTextField()
        parameterBrowseButton = javax.swing.JButton()
        jLabel4 = javax.swing.JLabel()
        imageTextField = javax.swing.JTextField()
        imageBrowseButton = javax.swing.JButton()
        runButton = javax.swing.JButton()
        jLabel5 = javax.swing.JLabel()
        statusLabel = javax.swing.JLabel()
        summarizeDataOnlyCheckBox = javax.swing.JCheckBox()
        jScrollPane1 = javax.swing.JScrollPane()
        loggingTextArea = javax.swing.JTextArea()
        omeroButton = javax.swing.JButton()
        useOmeroServerCheckBox = javax.swing.JCheckBox()

        defaultCloseOperation = javax.swing.WindowConstants.DISPOSE_ON_CLOSE
        title = "Segmentation and Quantification"

        methodComboBox!!.model = javax.swing.DefaultComboBoxModel<String>(arrayOf("Item 1", "Item 2", "Item 3", "Item 4"))
        methodComboBox!!.addActionListener { evt -> methodComboBoxActionPerformed(evt) }

        jLabel2!!.text = "Method:"

        jLabel3!!.text = "Parameter file:"

        parameterBrowseButton!!.text = "Browse"
        parameterBrowseButton!!.addActionListener { evt -> parameterBrowseButtonActionPerformed(evt) }

        jLabel4!!.text = "File or directory to process:"

        imageBrowseButton!!.text = "Browse"
        imageBrowseButton!!.addActionListener { evt -> imageBrowseButtonActionPerformed(evt) }

        runButton!!.text = "Run"
        runButton!!.addActionListener { evt -> runButtonActionPerformed(evt) }

        jLabel5!!.text = "Status:"

        statusLabel!!.text = "Ready"

        summarizeDataOnlyCheckBox!!.text = "Summarize data only"
        summarizeDataOnlyCheckBox!!.addActionListener { evt -> summarizeDataOnlyCheckBoxActionPerformed(evt) }

        jScrollPane1!!.preferredSize = java.awt.Dimension(100, 80)

        loggingTextArea!!.columns = 20
        loggingTextArea!!.font = java.awt.Font("Lucida Grande", 0, 10) // NOI18N
        loggingTextArea!!.rows = 5
        jScrollPane1!!.setViewportView(loggingTextArea)

        omeroButton!!.text = "Browse OMERO"
        omeroButton!!.addActionListener { evt -> omeroButtonActionPerformed(evt) }

        useOmeroServerCheckBox!!.text = "Use OMERO server"

        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel4!!, GroupLayout.PREFERRED_SIZE, 187, GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                        .addComponent(imageBrowseButton))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel3)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                        .addComponent(parameterBrowseButton))
                                                .addComponent(parameterFileTextField!!, GroupLayout.PREFERRED_SIZE, 284, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(methodComboBox!!, GroupLayout.Alignment.TRAILING, 0, 287, java.lang.Short.MAX_VALUE.toInt())
                                                .addComponent(customMethodTextField, GroupLayout.Alignment.TRAILING))
                                        .addComponent(summarizeDataOnlyCheckBox)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(runButton)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(statusLabel))
                                        .addComponent(imageTextField!!, GroupLayout.PREFERRED_SIZE, 284, GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(useOmeroServerCheckBox)
                                                .addGap(18, 18, 18)
                                                .addComponent(omeroButton!!, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1!!, GroupLayout.DEFAULT_SIZE, 451, java.lang.Short.MAX_VALUE.toInt())
                                .addContainerGap())
        )
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(methodComboBox!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(customMethodTextField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(parameterBrowseButton))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(parameterFileTextField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(imageBrowseButton)
                                                        .addComponent(jLabel4))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(imageTextField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(useOmeroServerCheckBox)
                                                        .addComponent(omeroButton))
                                                .addGap(9, 9, 9)
                                                .addComponent(summarizeDataOnlyCheckBox)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(runButton)
                                                        .addComponent(statusLabel)
                                                        .addComponent(jLabel5)))
                                        .addComponent(jScrollPane1!!, GroupLayout.DEFAULT_SIZE, 390, java.lang.Short.MAX_VALUE.toInt()))
                                .addContainerGap())
        )

        pack()
    }// </editor-fold>//GEN-END:initComponents

    private fun parameterBrowseButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_parameterBrowseButtonActionPerformed
        this.controller.browseForParameterFile()
    }//GEN-LAST:event_parameterBrowseButtonActionPerformed

    private fun imageBrowseButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_imageBrowseButtonActionPerformed
        this.controller.browseForImageFileOrDirectory()
    }//GEN-LAST:event_imageBrowseButtonActionPerformed

    private fun methodComboBoxActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_methodComboBoxActionPerformed
        this.controller.onMethodSelect()
    }//GEN-LAST:event_methodComboBoxActionPerformed

    private fun runButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_runButtonActionPerformed

        this.controller.runButtonPressed()


    }//GEN-LAST:event_runButtonActionPerformed

    private fun summarizeDataOnlyCheckBoxActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_summarizeDataOnlyCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_summarizeDataOnlyCheckBoxActionPerformed

    private fun omeroButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_omeroButtonActionPerformed
        this.controller.useOmeroDataSource()
    }//GEN-LAST:event_omeroButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var customMethodTextField: javax.swing.JTextField? = null
    private var imageBrowseButton: javax.swing.JButton? = null
    private var imageTextField: javax.swing.JTextField? = null
    private var jLabel2: javax.swing.JLabel? = null
    private var jLabel3: javax.swing.JLabel? = null
    private var jLabel4: javax.swing.JLabel? = null
    private var jLabel5: javax.swing.JLabel? = null
    private var jScrollPane1: javax.swing.JScrollPane? = null
    private var loggingTextArea: javax.swing.JTextArea? = null
    private var methodComboBox: javax.swing.JComboBox<*>? = null
    private var omeroButton: javax.swing.JButton? = null
    private var parameterBrowseButton: javax.swing.JButton? = null
    private var parameterFileTextField: javax.swing.JTextField? = null
    private var runButton: javax.swing.JButton? = null
    private var statusLabel: javax.swing.JLabel? = null
    private var summarizeDataOnlyCheckBox: javax.swing.JCheckBox? = null
    private var useOmeroServerCheckBox: javax.swing.JCheckBox? = null
    // End of variables declaration//GEN-END:variables


    private class TextAreaLogHandler(private var textArea: JTextArea?) : Handler() {
        var formatter = java.util.logging.SimpleFormatter()

        override fun close() {
            this.textArea = null
        }

        override fun flush() {
        }

        override fun publish(record: LogRecord) {
            val s = formatter.format(record)
            SwingUtilities.invokeLater { textArea!!.append(s) }
        }
    }

    companion object {
        internal val serialVersionUID = 1L
    }

    init {
        initComponents()
        methodComboBoxModel = DefaultComboBoxModel<String>()
        this.methodComboBox!!.model = methodComboBoxModel
        this.handler = TextAreaLogHandler(this.loggingTextArea)
    }
}
