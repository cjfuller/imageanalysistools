package edu.stanford.cfuller.analysistoolsinterface

import edu.stanford.cfuller.imageanalysistools.meta.parameters.ParameterType
import javax.swing.DefaultListModel
import javax.swing.DropMode
import javax.swing.GroupLayout
import javax.swing.LayoutStyle

/**

 * @author cfuller
 */
class ParameterWindow
/** Creates new form ParameterWindow  */
(internal var controller: ParameterSetupController) : javax.swing.JFrame() {
    var inUseParametersModel: DefaultListModel<String>
        internal set
    var objectBeingEdited: Any? = null
        internal set

    fun setAvailableParameters(parameters: List<String>) {
        val dlm = DefaultListModel<String>()
        for (o in parameters) {
            dlm.addElement(o)
        }
        this.availableParameterList!!.model = (dlm)
    }

    val currentlySelectedInUseParameterIndex: Int
        get() = this.usedParameterList!!.selectedIndex

    fun setCurrentlySelectedInUseParamter(index: Int) {
        this.usedParameterList!!.selectedIndex = index
    }

    var currentlySelectedName: String
        get() = this.parameterNameField!!.text
        set(name) {
            this.parameterNameField!!.text = name
        }
    var currentlySelectedValue: String
        get() = this.parameterValueField!!.text
        set(value) {
            this.parameterValueField!!.text = value
        }

    var parameterFile: String
        get() = this.parameterFileField!!.text
        set(f) {
            this.parameterFileField!!.text = f
        }

    fun selectMostRecentlyAddedInUseParameter() {
        this.usedParameterList!!.selectedIndex = this.usedParameterList!!.model.size - 1
        this.usedParameterListMouseClicked(null)
    }

    fun setCurrentlySelectedType(type: ParameterType, enabled: Boolean) {
        this.booleanRadioButton!!.isSelected = type === ParameterType.BOOLEAN_T
        this.integerRadioButton!!.isSelected = type === ParameterType.INTEGER_T
        this.floatingPointRadioButton!!.isSelected = type === ParameterType.FLOATING_T
        this.textRadioButton!!.isSelected = type === ParameterType.STRING_T
        this.booleanRadioButton!!.isEnabled = enabled
        this.integerRadioButton!!.isEnabled = enabled
        this.floatingPointRadioButton!!.isEnabled = enabled
        this.textRadioButton!!.isEnabled = enabled
    }

    val currentlySelectedType: ParameterType
        get() {
            if (this.booleanRadioButton!!.isSelected) return ParameterType.BOOLEAN_T
            if (this.integerRadioButton!!.isSelected) return ParameterType.INTEGER_T
            if (this.floatingPointRadioButton!!.isSelected) return ParameterType.FLOATING_T
            if (this.textRadioButton!!.isSelected) return ParameterType.STRING_T
            return ParameterType.STRING_T
        }

    fun setNameFieldEnabled(enabled: Boolean) {
        this.parameterNameField!!.isEnabled = enabled
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    fun initComponents() {

        parameterTypeButtonGroup = javax.swing.ButtonGroup()
        jScrollPane1 = javax.swing.JScrollPane()
        availableParameterList = javax.swing.JList<String>()
        jScrollPane2 = javax.swing.JScrollPane()
        usedParameterList = javax.swing.JList<String>()
        jLabel1 = javax.swing.JLabel()
        jLabel2 = javax.swing.JLabel()
        addButton = javax.swing.JButton()
        removeButton = javax.swing.JButton()
        browseButton = javax.swing.JButton()
        doneButton = javax.swing.JButton()
        cancelButton = javax.swing.JButton()
        upButton = javax.swing.JButton()
        downButton = javax.swing.JButton()
        jPanel1 = javax.swing.JPanel()
        jLabel3 = javax.swing.JLabel()
        parameterNameField = javax.swing.JTextField()
        jLabel4 = javax.swing.JLabel()
        parameterValueField = javax.swing.JTextField()
        jLabel5 = javax.swing.JLabel()
        textRadioButton = javax.swing.JRadioButton()
        booleanRadioButton = javax.swing.JRadioButton()
        integerRadioButton = javax.swing.JRadioButton()
        floatingPointRadioButton = javax.swing.JRadioButton()
        jLabel7 = javax.swing.JLabel()
        parameterFileField = javax.swing.JTextField()

        defaultCloseOperation = javax.swing.WindowConstants.DISPOSE_ON_CLOSE
        title = "Specify Analysis Parameters"

        jScrollPane1!!.horizontalScrollBar = null

        availableParameterList!!.model = (object : javax.swing.AbstractListModel<String>() {
            internal val serialVersionUID = 1L
            internal var strings = arrayOf("Item 1", "Item 2", "Item 3", "Item 4", "Item 5")
            override fun getSize(): Int {
                return strings.size
            }

            override fun getElementAt(i: Int): String {
                return strings[i]
            }
        })
        availableParameterList!!.selectionMode = javax.swing.ListSelectionModel.SINGLE_SELECTION
        availableParameterList!!.dropMode = javax.swing.DropMode.INSERT
        jScrollPane1!!.setViewportView(availableParameterList)

        jScrollPane2!!.horizontalScrollBar = null

        usedParameterList!!.model = (object : javax.swing.AbstractListModel<String>() {
            internal val serialVersionUID = 1L
            internal var strings = arrayOf("Item 1", "Item 2", "Item 3", "Item 4", "Item 5")
            override fun getSize(): Int {
                return strings.size
            }

            override fun getElementAt(i: Int): String {
                return strings[i]
            }
        })
        usedParameterList!!.selectionMode = javax.swing.ListSelectionModel.SINGLE_SELECTION
        usedParameterList!!.dropMode = javax.swing.DropMode.INSERT
        usedParameterList!!.addMouseListener(object : java.awt.event.MouseAdapter() {
            override fun mouseClicked(evt: java.awt.event.MouseEvent?) {
                usedParameterListMouseClicked(evt)
            }
        })
        usedParameterList!!.addKeyListener(object : java.awt.event.KeyAdapter() {
            override fun keyTyped(evt: java.awt.event.KeyEvent?) {
                evt?.let { usedParameterListKeyTyped(it) }
            }
        })
        jScrollPane2!!.setViewportView(usedParameterList)

        jLabel1!!.text = "Available parameters:"

        jLabel2!!.text = "Parameters in use:"

        addButton!!.text = "Add"
        addButton!!.addActionListener { evt -> addButtonActionPerformed(evt) }

        removeButton!!.text = "Remove"
        removeButton!!.addActionListener { evt -> removeButtonActionPerformed(evt) }

        browseButton!!.text = "Browse"
        browseButton!!.addActionListener { evt -> browseButtonActionPerformed(evt) }

        doneButton!!.text = "Done"
        doneButton!!.addActionListener { evt -> doneButtonActionPerformed(evt) }

        cancelButton!!.text = "Cancel"
        cancelButton!!.addActionListener { evt -> cancelButtonActionPerformed(evt) }

        upButton!!.text = "Up"
        upButton!!.border = javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)
        upButton!!.addActionListener { evt -> upButtonActionPerformed(evt) }

        downButton!!.text = "Down"
        downButton!!.border = javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)
        downButton!!.addActionListener { evt -> downButtonActionPerformed(evt) }

        jPanel1!!.border = javax.swing.BorderFactory.createEtchedBorder()

        jLabel3!!.text = "Parameter Name"

        parameterNameField!!.addFocusListener(object : java.awt.event.FocusAdapter() {
            override fun focusGained(evt: java.awt.event.FocusEvent?) {
                evt?.let { parameterNameFieldFocusGained(it) }
            }

            override fun focusLost(evt: java.awt.event.FocusEvent?) {
                evt?.let { parameterNameFieldFocusLost(it) }
            }
        })

        jLabel4!!.text = "Parameter Value"

        parameterValueField!!.addFocusListener(object : java.awt.event.FocusAdapter() {
            override fun focusGained(evt: java.awt.event.FocusEvent?) {
                evt?.let { parameterValueFieldFocusGained(it) }
            }

            override fun focusLost(evt: java.awt.event.FocusEvent?) {
                evt?.let { parameterValueFieldFocusLost(it) }
            }
        })

        jLabel5!!.text = "Parameter Type"

        parameterTypeButtonGroup!!.add(textRadioButton)
        textRadioButton!!.text = "Text"
        textRadioButton!!.addFocusListener(object : java.awt.event.FocusAdapter() {
            override fun focusGained(evt: java.awt.event.FocusEvent?) {
                evt?.let { textRadioButtonFocusGained(it) }
            }

            override fun focusLost(evt: java.awt.event.FocusEvent?) {
                evt?.let { textRadioButtonFocusLost(it) }
            }
        })

        parameterTypeButtonGroup!!.add(booleanRadioButton)
        booleanRadioButton!!.text = "Boolean"
        booleanRadioButton!!.addFocusListener(object : java.awt.event.FocusAdapter() {
            override fun focusGained(evt: java.awt.event.FocusEvent?) {
                evt?.let { booleanRadioButtonFocusGained(it) }
            }

            override fun focusLost(evt: java.awt.event.FocusEvent?) {
                evt?.let { booleanRadioButtonFocusLost(it) }
            }
        })

        parameterTypeButtonGroup!!.add(integerRadioButton)
        integerRadioButton!!.text = "Integer"
        integerRadioButton!!.addFocusListener(object : java.awt.event.FocusAdapter() {
            override fun focusGained(evt: java.awt.event.FocusEvent?) {
                evt?.let { integerRadioButtonFocusGained(it) }
            }

            override fun focusLost(evt: java.awt.event.FocusEvent?) {
                evt?.let { integerRadioButtonFocusLost(it) }
            }
        })

        parameterTypeButtonGroup!!.add(floatingPointRadioButton)
        floatingPointRadioButton!!.text = "Decimal Number"

        floatingPointRadioButton!!.addFocusListener(object : java.awt.event.FocusAdapter() {
            override fun focusGained(evt: java.awt.event.FocusEvent?) {
                evt?.let { floatingPointRadioButtonFocusGained(it) }
            }

            override fun focusLost(evt: java.awt.event.FocusEvent?) {
                evt?.let { floatingPointRadioButtonFocusLost(it) }
            }
        })

        val jPanel1Layout = GroupLayout(jPanel1!!)
        jPanel1!!.layout = jPanel1Layout
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(parameterValueField, GroupLayout.Alignment.LEADING)
                                                .addComponent(parameterNameField!!, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 210, java.lang.Short.MAX_VALUE.toInt()))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(textRadioButton)
                                                        .addComponent(integerRadioButton))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(floatingPointRadioButton)
                                                        .addComponent(booleanRadioButton))))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt()))
        )
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3!!, GroupLayout.PREFERRED_SIZE, 16, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(parameterNameField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(parameterValueField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(textRadioButton)
                                        .addComponent(booleanRadioButton))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(integerRadioButton)
                                        .addComponent(floatingPointRadioButton))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt()))
        )

        jLabel7!!.text = "Parameter file:"

        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jScrollPane1!!, GroupLayout.PREFERRED_SIZE, 254, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addButton!!, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(upButton!!, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(downButton!!, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                        .addComponent(removeButton))
                                                .addComponent(jScrollPane2!!, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 254, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 76, java.lang.Short.MAX_VALUE.toInt())
                                                .addComponent(browseButton))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(doneButton)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cancelButton))
                                        .addComponent(jPanel1!!, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                        .addComponent(parameterFileField!!, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 254, java.lang.Short.MAX_VALUE.toInt()))
                                .addContainerGap())
        )
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel7)
                                        .addComponent(browseButton))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1!!, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 278, java.lang.Short.MAX_VALUE.toInt())
                                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(parameterFileField!!, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                .addComponent(jPanel1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane2!!, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 278, java.lang.Short.MAX_VALUE.toInt()))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(addButton)
                                        .addComponent(upButton!!, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(downButton!!, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(removeButton)
                                        .addComponent(cancelButton)
                                        .addComponent(doneButton))
                                .addContainerGap())
        )

        pack()
    }// </editor-fold>//GEN-END:initComponents

    private fun addButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_addButtonActionPerformed
        this.controller.useParameter(this.availableParameterList!!.selectedValue)
    }//GEN-LAST:event_addButtonActionPerformed

    private fun parameterNameFieldFocusLost(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_parameterNameFieldFocusLost
        objectBeingEdited?.let { controller.shouldUpdateCurrentlyUsedParameter(it) }
    }//GEN-LAST:event_parameterNameFieldFocusLost

    private fun parameterValueFieldFocusLost(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_parameterValueFieldFocusLost
        objectBeingEdited?.let { controller.shouldUpdateCurrentlyUsedParameter(it) }
    }//GEN-LAST:event_parameterValueFieldFocusLost

    private fun usedParameterListMouseClicked(evt: java.awt.event.MouseEvent?) {//GEN-FIRST:event_usedParameterListMouseClicked
        controller.processNewParameterSelection(this.usedParameterList!!.selectedValue)
    }//GEN-LAST:event_usedParameterListMouseClicked

    private fun usedParameterListKeyTyped(evt: java.awt.event.KeyEvent) {//GEN-FIRST:event_usedParameterListKeyTyped
        controller.processNewParameterSelection(this.usedParameterList!!.selectedValue)
    }//GEN-LAST:event_usedParameterListKeyTyped

    private fun upButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_upButtonActionPerformed
        controller.upButtonPressed()
    }//GEN-LAST:event_upButtonActionPerformed

    private fun downButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_downButtonActionPerformed
        controller.downButtonPressed()
    }//GEN-LAST:event_downButtonActionPerformed

    private fun removeButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_removeButtonActionPerformed
        controller.removeButtonPressed()
    }//GEN-LAST:event_removeButtonActionPerformed

    private fun parameterNameFieldFocusGained(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_parameterNameFieldFocusGained
        this.objectBeingEdited = this.usedParameterList!!.selectedValue
    }//GEN-LAST:event_parameterNameFieldFocusGained

    private fun parameterValueFieldFocusGained(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_parameterValueFieldFocusGained
        this.objectBeingEdited = this.usedParameterList!!.selectedValue
    }//GEN-LAST:event_parameterValueFieldFocusGained

    private fun textRadioButtonFocusGained(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_textRadioButtonFocusGained
        this.objectBeingEdited = this.usedParameterList!!.selectedValue
    }//GEN-LAST:event_textRadioButtonFocusGained

    private fun textRadioButtonFocusLost(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_textRadioButtonFocusLost
        this.objectBeingEdited?.let { controller.shouldUpdateCurrentlyUsedParameter(it) }
    }//GEN-LAST:event_textRadioButtonFocusLost

    private fun booleanRadioButtonFocusGained(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_booleanRadioButtonFocusGained
        this.objectBeingEdited = this.usedParameterList!!.selectedValue
    }//GEN-LAST:event_booleanRadioButtonFocusGained

    private fun booleanRadioButtonFocusLost(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_booleanRadioButtonFocusLost
        this.objectBeingEdited?.let { controller.shouldUpdateCurrentlyUsedParameter(it) }
    }//GEN-LAST:event_booleanRadioButtonFocusLost

    private fun integerRadioButtonFocusGained(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_integerRadioButtonFocusGained
        this.objectBeingEdited = this.usedParameterList!!.selectedValue
    }//GEN-LAST:event_integerRadioButtonFocusGained

    private fun integerRadioButtonFocusLost(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_integerRadioButtonFocusLost
        this.objectBeingEdited?.let { controller.shouldUpdateCurrentlyUsedParameter(it) }
    }//GEN-LAST:event_integerRadioButtonFocusLost

    private fun floatingPointRadioButtonFocusGained(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_floatingPointRadioButtonFocusGained
        this.objectBeingEdited = this.usedParameterList!!.selectedValue
    }//GEN-LAST:event_floatingPointRadioButtonFocusGained

    private fun floatingPointRadioButtonFocusLost(evt: java.awt.event.FocusEvent) {//GEN-FIRST:event_floatingPointRadioButtonFocusLost
        this.objectBeingEdited?.let { controller.shouldUpdateCurrentlyUsedParameter(it) }
    }//GEN-LAST:event_floatingPointRadioButtonFocusLost

    private fun browseButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_browseButtonActionPerformed
        this.controller.browseButtonPressed()
    }//GEN-LAST:event_browseButtonActionPerformed

    private fun doneButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_doneButtonActionPerformed
        this.controller.doneButtonPressed()
    }//GEN-LAST:event_doneButtonActionPerformed

    private fun cancelButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.controller.cancelButtonPressed()
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var addButton: javax.swing.JButton? = null
    private var availableParameterList: javax.swing.JList<*>? = null
    private var booleanRadioButton: javax.swing.JRadioButton? = null
    private var browseButton: javax.swing.JButton? = null
    private var cancelButton: javax.swing.JButton? = null
    private var doneButton: javax.swing.JButton? = null
    private var downButton: javax.swing.JButton? = null
    private var floatingPointRadioButton: javax.swing.JRadioButton? = null
    private var integerRadioButton: javax.swing.JRadioButton? = null
    private var jLabel1: javax.swing.JLabel? = null
    private var jLabel2: javax.swing.JLabel? = null
    private var jLabel3: javax.swing.JLabel? = null
    private var jLabel4: javax.swing.JLabel? = null
    private var jLabel5: javax.swing.JLabel? = null
    private var jLabel7: javax.swing.JLabel? = null
    private var jPanel1: javax.swing.JPanel? = null
    private var jScrollPane1: javax.swing.JScrollPane? = null
    private var jScrollPane2: javax.swing.JScrollPane? = null
    private var parameterFileField: javax.swing.JTextField? = null
    private var parameterNameField: javax.swing.JTextField? = null
    private var parameterTypeButtonGroup: javax.swing.ButtonGroup? = null
    private var parameterValueField: javax.swing.JTextField? = null
    private var removeButton: javax.swing.JButton? = null
    private var textRadioButton: javax.swing.JRadioButton? = null
    private var upButton: javax.swing.JButton? = null
    private var usedParameterList: javax.swing.JList<*>? = null

    companion object {
        internal val serialVersionUID = 1L
    }
    // End of variables declaration//GEN-END:variables

    init {
        this.inUseParametersModel = DefaultListModel<String>()
        initComponents()
        this.usedParameterList!!.model = this.inUseParametersModel
        this.availableParameterList!!.dragEnabled = true
        this.usedParameterList!!.dropMode = DropMode.ON_OR_INSERT
        this.availableParameterList!!.transferHandler = ParameterTransferHandler(this.controller)
        this.usedParameterList!!.transferHandler = ParameterTransferHandler(this.controller)
    }
}
