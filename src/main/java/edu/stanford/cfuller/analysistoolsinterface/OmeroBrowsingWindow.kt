package edu.stanford.cfuller.analysistoolsinterface

import java.util.prefs.Preferences

import javax.swing.GroupLayout
import javax.swing.JTree
import javax.swing.LayoutStyle

/**

 * @author cfuller
 */
class OmeroBrowsingWindow
/** Creates new form OmeroBrowsingWindow  */
(internal var controller: OmeroBrowsingWindowController) : javax.swing.JFrame() {
    val host: String
        get() = this.serverTextField!!.text

    val username: String
        get() = this.usernameTextField!!.text

    val password: CharArray
        get() = this.passwordField!!.password

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    fun initComponents() {

        jScrollPane1 = javax.swing.JScrollPane()
        omeroBrowsingTree = javax.swing.JTree()
        usernameTextField = javax.swing.JTextField()
        passwordField = javax.swing.JPasswordField()
        serverTextField = javax.swing.JTextField()
        jLabel1 = javax.swing.JLabel()
        jLabel2 = javax.swing.JLabel()
        jLabel3 = javax.swing.JLabel()
        loginButton = javax.swing.JButton()
        imageButton = javax.swing.JButton()
        loadImagesButton = javax.swing.JButton()

        defaultCloseOperation = javax.swing.WindowConstants.DISPOSE_ON_CLOSE

        jScrollPane1!!.setViewportView(omeroBrowsingTree)

        serverTextField!!.text = "171.65.20.207"

        jLabel1!!.text = "Omero Server:"

        jLabel2!!.text = "Username:"

        jLabel3!!.text = "Password:"

        loginButton!!.text = "Login"
        loginButton!!.addActionListener { evt -> loginButtonActionPerformed(evt) }

        imageButton!!.text = "Use selected"
        imageButton!!.addActionListener { evt -> imageButtonActionPerformed(evt) }

        loadImagesButton!!.text = "Load Images"
        loadImagesButton!!.addActionListener { evt -> loadImagesButtonActionPerformed(evt) }

        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane1!!, GroupLayout.PREFERRED_SIZE, 278, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(serverTextField!!, GroupLayout.PREFERRED_SIZE, 246, GroupLayout.PREFERRED_SIZE)
                                                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel2)
                                                                .addComponent(jLabel3))
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(passwordField, GroupLayout.Alignment.TRAILING)
                                                                .addComponent(usernameTextField!!, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 144, java.lang.Short.MAX_VALUE.toInt())
                                                                .addComponent(loginButton, GroupLayout.Alignment.TRAILING)))
                                                .addGroup(GroupLayout.Alignment.TRAILING, layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(loadImagesButton)
                                                        .addComponent(imageButton)))
                                        .addComponent(jLabel1))
                                .addContainerGap())
        )
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(8, 8, 8)
                                                .addComponent(serverTextField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(usernameTextField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(passwordField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(loginButton)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 67, java.lang.Short.MAX_VALUE.toInt())
                                                .addComponent(loadImagesButton)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(imageButton))
                                        .addComponent(jScrollPane1!!, GroupLayout.PREFERRED_SIZE, 282, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        )

        pack()
    }// </editor-fold>//GEN-END:initComponents

    private fun loginButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_loginButtonActionPerformed

        Preferences.userNodeForPackage(this.javaClass).put("omeroserver_hostname", this.serverTextField!!.text)

        this.controller.loginButtonPressed()
    }//GEN-LAST:event_loginButtonActionPerformed

    private fun loadImagesButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_loadImagesButtonActionPerformed
        this.controller.loadImages()
    }//GEN-LAST:event_loadImagesButtonActionPerformed

    private fun imageButtonActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_imageButtonActionPerformed
        this.controller.doneButtonPressed()
    }//GEN-LAST:event_imageButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var imageButton: javax.swing.JButton? = null
    private var jLabel1: javax.swing.JLabel? = null
    private var jLabel2: javax.swing.JLabel? = null
    private var jLabel3: javax.swing.JLabel? = null
    private var jScrollPane1: javax.swing.JScrollPane? = null
    private var loadImagesButton: javax.swing.JButton? = null
    private var loginButton: javax.swing.JButton? = null
    var omeroBrowsingTree: JTree? = null
        private set
    private var passwordField: javax.swing.JPasswordField? = null
    private var serverTextField: javax.swing.JTextField? = null
    private var usernameTextField: javax.swing.JTextField? = null

    companion object {
        internal val serialVersionUID = 1L
    }
    // End of variables declaration//GEN-END:variables

    init {
        initComponents()
        this.serverTextField!!.text = Preferences.userNodeForPackage(this.javaClass).get("omeroserver_hostname", this.serverTextField!!.text)
    }
}
