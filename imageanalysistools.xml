<?xml version="1.0" encoding="UTF-8"?>
<project name="imageanalysistools" default="all">
  
  
  <property file="imageanalysistools.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
  <path id="jdk.classpath.1.6">
    <fileset dir="${jdk.home.1.6}">
      <include name="../../../../Support/Deploy.bundle/Contents/Resources/Java/deploy.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javaws.jar"/>
      <include name="lib/jce.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/management-agent.jar"/>
      <include name="lib/plugin.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="../Classes/alt-rt.jar"/>
      <include name="../Classes/charsets.jar"/>
      <include name="../Classes/classes.jar"/>
      <include name="../Classes/jsse.jar"/>
      <include name="../Classes/ui.jar"/>
      <include name="lib/ext/apple_provider.jar"/>
      <include name="lib/ext/dnsns.jar"/>
      <include name="lib/ext/localedata.jar"/>
      <include name="lib/ext/sunjce_provider.jar"/>
      <include name="lib/ext/sunpkcs11.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.6}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.lib.classpath">
    <pathelement location="${basedir}/lib/bio-formats.jar"/>
    <pathelement location="${basedir}/lib/commons-logging-1.1.1.jar"/>
    <pathelement location="${basedir}/lib/commons-math-2.1.jar"/>
    <pathelement location="${basedir}/lib/loci-common.jar"/>
    <pathelement location="${basedir}/lib/ome-xml.jar"/>
    <pathelement location="${basedir}/lib/omero_client.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.6.1.jar"/>
    <pathelement location="${basedir}/lib/slf4j-nop-1.6.1.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module ImageAnalysisTools -->
  
  <dirname property="module.imageanalysistools.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.imageanalysistools" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.imageanalysistools" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.imageanalysistools" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.imageanalysistools" value="${compiler.args}"/>
  
  <property name="imageanalysistools.output.dir" value="${module.imageanalysistools.basedir}/out/production/ImageAnalysisTools"/>
  <property name="imageanalysistools.testoutput.dir" value="${module.imageanalysistools.basedir}/out/test/ImageAnalysisTools"/>
  
  <path id="imageanalysistools.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="imageanalysistools.module.production.classpath">
    <path refid="${module.jdk.classpath.imageanalysistools}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="imageanalysistools.runtime.production.module.classpath">
    <pathelement location="${imageanalysistools.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="imageanalysistools.module.classpath">
    <path refid="${module.jdk.classpath.imageanalysistools}"/>
    <pathelement location="${imageanalysistools.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="imageanalysistools.runtime.module.classpath">
    <pathelement location="${imageanalysistools.testoutput.dir}"/>
    <pathelement location="${imageanalysistools.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.imageanalysistools">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.imageanalysistools">
    <patternset refid="excluded.from.module.imageanalysistools"/>
  </patternset>
  
  <path id="imageanalysistools.module.sourcepath">
    <dirset dir="${module.imageanalysistools.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.imageanalysistools" depends="compile.module.imageanalysistools.production,compile.module.imageanalysistools.tests" description="Compile module ImageAnalysisTools"/>
  
  <target name="compile.module.imageanalysistools.production" description="Compile module ImageAnalysisTools; production classes">
    <mkdir dir="${imageanalysistools.output.dir}"/>
    <javac destdir="${imageanalysistools.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.imageanalysistools}/javac">
      <compilerarg line="${compiler.args.imageanalysistools}"/>
      <bootclasspath refid="imageanalysistools.module.bootclasspath"/>
      <classpath refid="imageanalysistools.module.production.classpath"/>
      <src refid="imageanalysistools.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.imageanalysistools"/>
    </javac>
    
    <copy todir="${imageanalysistools.output.dir}">
      <fileset dir="${module.imageanalysistools.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.imageanalysistools.tests" depends="compile.module.imageanalysistools.production" description="compile module ImageAnalysisTools; test classes" unless="skip.tests"/>
  
  <target name="clean.module.imageanalysistools" description="cleanup module">
    <delete dir="${imageanalysistools.output.dir}"/>
    <delete dir="${imageanalysistools.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.imageanalysistools" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.imageanalysistools" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.imageanalysistools" value="${basedir}/../Colocalization3D/lib"/>
    <property name="artifact.output.imageanalysistools_local" value="${basedir}/out/artifacts/ImageAnalysisTools"/>
    <property name="artifact.output.jimageanalysistools" value="${basedir}/../../NetBeansProjects/AnalysisToolsInterface/lib"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.ImageAnalysisTools.jar" value="${artifacts.temp.dir}/ImageAnalysisTools.jar"/>
    <property name="temp.jar.path.ImageAnalysisTools_local.jar" value="${artifacts.temp.dir}/ImageAnalysisTools_local.jar"/>
    <property name="temp.jar.path.ImageAnalysisTools.jar2" value="${artifacts.temp.dir}/1/ImageAnalysisTools.jar"/>
    <mkdir dir="${artifacts.temp.dir}/1"/>
  </target>
  
  <target name="artifact.imageanalysistools" depends="init.artifacts, compile.module.imageanalysistools" description="Build &apos;ImageAnalysisTools&apos; artifact">
    <property name="artifact.temp.output.imageanalysistools" value="${artifacts.temp.dir}/ImageAnalysisTools"/>
    <mkdir dir="${artifact.temp.output.imageanalysistools}"/>
    <jar destfile="${temp.jar.path.ImageAnalysisTools.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${imageanalysistools.output.dir}"/>
      <zipfileset src="${basedir}/lib/ome-xml.jar"/>
      <zipfileset src="${basedir}/lib/loci-common.jar"/>
      <zipfileset src="${basedir}/lib/commons-math-2.1.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-api-1.6.1.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-nop-1.6.1.jar"/>
      <zipfileset src="${basedir}/lib/bio-formats.jar"/>
    </jar>
    <copy file="${temp.jar.path.ImageAnalysisTools.jar}" tofile="${artifact.temp.output.imageanalysistools}/ImageAnalysisTools.jar"/>
  </target>
  
  <target name="artifact.imageanalysistools_local" depends="init.artifacts, compile.module.imageanalysistools" description="Build &apos;ImageAnalysisTools_local&apos; artifact">
    <property name="artifact.temp.output.imageanalysistools_local" value="${artifacts.temp.dir}/ImageAnalysisTools_local"/>
    <mkdir dir="${artifact.temp.output.imageanalysistools_local}"/>
    <jar destfile="${temp.jar.path.ImageAnalysisTools_local.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${imageanalysistools.output.dir}"/>
      <zipfileset src="${basedir}/lib/bio-formats.jar"/>
      <zipfileset src="${basedir}/lib/ome-xml.jar"/>
      <zipfileset src="${basedir}/lib/loci-common.jar"/>
      <zipfileset src="${basedir}/lib/commons-math-2.1.jar"/>
      <zipfileset file="${basedir}/lib/bio-formats.jar"/>
      <zipfileset file="${basedir}/lib/ome-xml.jar"/>
      <zipfileset file="${basedir}/lib/loci-common.jar"/>
      <zipfileset file="${basedir}/lib/commons-math-2.1.jar"/>
      <zipfileset file="${basedir}/lib/slf4j-nop-1.6.1.jar"/>
      <zipfileset file="${basedir}/lib/slf4j-api-1.6.1.jar"/>
      <zipfileset file="${basedir}/lib/omero_client.jar"/>
      <zipfileset file="${basedir}/lib/commons-logging-1.1.1.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-api-1.6.1.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-nop-1.6.1.jar"/>
    </jar>
    <copy file="${temp.jar.path.ImageAnalysisTools_local.jar}" tofile="${artifact.temp.output.imageanalysistools_local}/ImageAnalysisTools_local.jar"/>
  </target>
  
  <target name="artifact.jimageanalysistools" depends="init.artifacts, compile.module.imageanalysistools" description="Build &apos;JImageAnalysisTools&apos; artifact">
    <property name="artifact.temp.output.jimageanalysistools" value="${artifacts.temp.dir}/JImageAnalysisTools"/>
    <mkdir dir="${artifact.temp.output.jimageanalysistools}"/>
    <jar destfile="${temp.jar.path.ImageAnalysisTools.jar2}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${imageanalysistools.output.dir}"/>
      <zipfileset file="${basedir}/lib/bio-formats.jar"/>
      <zipfileset file="${basedir}/lib/ome-xml.jar"/>
      <zipfileset file="${basedir}/lib/loci-common.jar"/>
      <zipfileset file="${basedir}/lib/commons-math-2.1.jar"/>
      <zipfileset file="${basedir}/lib/slf4j-nop-1.6.1.jar"/>
      <zipfileset file="${basedir}/lib/slf4j-api-1.6.1.jar"/>
      <zipfileset file="${basedir}/lib/omero_client.jar"/>
      <zipfileset file="${basedir}/lib/commons-logging-1.1.1.jar"/>
      <zipfileset file="${basedir}/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${basedir}/resources" prefix="resources"/>
    </jar>
    <copy file="${temp.jar.path.ImageAnalysisTools.jar2}" tofile="${artifact.temp.output.jimageanalysistools}/ImageAnalysisTools.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.imageanalysistools, artifact.imageanalysistools_local, artifact.jimageanalysistools" description="Build all artifacts">
    <mkdir dir="${artifact.output.imageanalysistools}"/>
    <copy todir="${artifact.output.imageanalysistools}">
      <fileset dir="${artifact.temp.output.imageanalysistools}"/>
    </copy>
    <mkdir dir="${artifact.output.imageanalysistools_local}"/>
    <copy todir="${artifact.output.imageanalysistools_local}">
      <fileset dir="${artifact.temp.output.imageanalysistools_local}"/>
    </copy>
    <mkdir dir="${artifact.output.jimageanalysistools}"/>
    <copy todir="${artifact.output.jimageanalysistools}">
      <fileset dir="${artifact.temp.output.jimageanalysistools}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>